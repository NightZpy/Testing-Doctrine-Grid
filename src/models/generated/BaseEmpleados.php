<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Empleados', 'doctrine');

/**
 * BaseEmpleados
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $cedula
 * @property string $nombre
 * @property string $apellido
 * @property string $nacionalidad
 * @property string $sexo
 * @property string $estado_civil
 * @property date $fecha_nacimiento
 * @property string $movil
 * @property string $email
 * @property integer $direccion_id
 * @property integer $tipo_personal_id
 * @property integer $nivel_academico_id
 * @property integer $cargo_id
 * @property integer $condicion_cargo_id
 * @property integer $id
 * @property integer $institucion_id
 * @property Direcciones $Direcciones
 * @property Cargos $Cargos
 * @property CondicionCargos $CondicionCargos
 * @property NivelesAcademicos $NivelesAcademicos
 * @property TiposPersonal $TiposPersonal
 * @property Instituciones $Instituciones
 * @property Doctrine_Collection $Voluntarios
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEmpleados extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('empleados');
        $this->hasColumn('cedula', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             ));
        $this->hasColumn('nombre', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('apellido', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('nacionalidad', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('sexo', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('estado_civil', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('fecha_nacimiento', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('movil', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('email', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('direccion_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('tipo_personal_id', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('nivel_academico_id', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('cargo_id', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('condicion_cargo_id', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('id', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('institucion_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Direcciones', array(
             'local' => 'direccion_id',
             'foreign' => 'id'));

        $this->hasOne('Cargos', array(
             'local' => 'cargo_id',
             'foreign' => 'id'));

        $this->hasOne('CondicionCargos', array(
             'local' => 'condicion_cargo_id',
             'foreign' => 'id'));

        $this->hasOne('NivelesAcademicos', array(
             'local' => 'nivel_academico_id',
             'foreign' => 'id'));

        $this->hasOne('TiposPersonal', array(
             'local' => 'tipo_personal_id',
             'foreign' => 'id'));

        $this->hasOne('Instituciones', array(
             'local' => 'institucion_id',
             'foreign' => 'id'));

        $this->hasMany('Voluntarios', array(
             'local' => 'cedula',
             'foreign' => 'cedula_empleado'));
    }
}